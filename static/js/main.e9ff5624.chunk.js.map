{"version":3,"sources":["header/header.js","form/form.js","results/results.js","footer/footer.js","App.js","index.js"],"names":["Header","id","React","Component","Form","props","handleSubmitUrl","e","a","preventDefault","url","target","value","setState","fetch","state","method","route","mode","stars","json","data","apiResults","handleClickGo","name","onSubmit","this","placeholder","type","data-testId","onClick","Results","console","log","count","src","results","Footer","App","updateResults","headers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAceA,G,6KARX,OACE,qBAAKC,GAAG,aAAR,SACE,6C,GAJaC,IAAMC,Y,uBC0DZC,G,wDApDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAMRC,gBAPmB,uCAOD,WAAOC,GAAP,mBAAAC,EAAA,6DAChBD,EAAEE,iBACIC,EAAMH,EAAEI,OAAOD,IAAIE,MACzB,EAAKC,SAAS,CAAEH,QAHA,SAKII,MAAM,EAAKC,MAAML,IAAK,CAAEM,OAAQ,EAAKD,MAAME,MAAOC,KAAM,SAL5D,cAKVC,EALU,gBAMGA,EAAMC,OANT,OAMVC,EANU,OAehB,EAAKhB,MAAMiB,WAAWD,GAfN,4CAPC,wDA0BnBE,cAAgB,SAAAhB,GACd,IAAMU,EAAQV,EAAEI,OAAOa,KACvB,EAAKX,SAAS,CAAEI,WA1BhB,EAAKF,MAAQ,CACXL,IAAK,GACLO,MAAO,IAJQ,E,qDAmCjB,OACE,qBAAKhB,GAAG,OAAR,SACE,uBAAMwB,SAAUC,KAAKpB,gBAArB,UACE,uBAAOkB,KAAK,MAAMG,YAAY,qBAAqBC,KAAK,SACxD,yBAAQA,KAAK,SAAb,UAAsB,sBAAMC,cAAY,iBAAxC,SAEA,sBAAKC,QAASJ,KAAKH,cAAnB,UACE,wBAAQC,KAAK,MAAb,iBACA,wBAAQA,KAAK,MAAb,iBACA,wBAAQA,KAAK,OAAb,kBACA,wBAAQA,KAAK,SAAb,gC,GA9COtB,IAAMC,Y,iBCWV4B,E,uKAbX,OADAC,QAAQC,IAAI,UAAWP,KAAKrB,MAAM6B,OAEhC,sBAAKjC,GAAG,SAAR,UACE,cAAC,IAAD,CAAWkC,IAAKT,KAAKrB,MAAM+B,UAC3B,4BAAG,sBAAMP,cAAY,eAAlB,SAAkC,SAAWH,KAAKrB,MAAM6B,iB,GAP7ChC,IAAMC,WCQbkC,G,6KANX,OACE,4D,GAHenC,IAAMC,YCgDZmC,G,wDAnCb,WAAYjC,GAAQ,IAAD,8BACjB,cAAMA,IAQRkC,cAAgB,SAACjB,GACf,EAAKT,SAAS,CAAE2B,QAASlB,EAAWkB,UACpC,EAAK3B,SAAS,CAAEuB,QAASd,EAAWc,UACpC,EAAKvB,SAAS,CAAEqB,MAAOZ,EAAWY,SAVlC,EAAKnB,MAAQ,CACXmB,MAAO,GACPE,QAAS,GACTI,QAAS,IALM,E,qDAgBjB,OACE,qCACE,cAAC,EAAD,eACMd,KAAKX,MAAMyB,UAEjB,cAAC,EAAD,CACElB,WAAYI,KAAKa,gBAEnB,cAAC,EAAD,CACEL,MAAOR,KAAKX,MAAMmB,MAClBE,QAASV,KAAKX,MAAMqB,UAEtB,cAAC,EAAD,W,GA7BUlC,IAAMC,YCVxBsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e9ff5624.chunk.js","sourcesContent":["import React from 'react';\nimport './header.scss';\n\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <div id=\"header-div\" >\n        <h1>RESTy</h1>\n      </div>\n    )\n  }\n}\n\nexport default Header;","import React from 'react';\nimport './form.scss';\n// lab requirements\n/* <Form />\nExpects a function to be sent to it as a prop\nRenders a URL entry form\nA selection of REST methods to choose from (“get” should be the default)\nOn submit\nSend the API results back to the <App> using the method sent down in props */\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: '',\n      route: ''\n    }\n  }\n  handleSubmitUrl = async (e) => {\n    e.preventDefault();\n    const url = e.target.url.value;\n    this.setState({ url });\n    //if (this.state.route) { this.setState({ display: true }) }\n    const stars = await fetch(this.state.url, { method: this.state.route, mode: 'cors' })\n    const data = await stars.json();\n\n    // .then(response => {\n    //   console.log('response here', response);\n    //   return response.json();\n    // })\n    // .catch(err => {\n    //   console.log('ERROR', err);\n    // });\n    this.props.apiResults(data);\n\n  }\n\n  handleClickGo = e => {\n    const route = e.target.name;\n    this.setState({ route });\n\n    //if (this.state.url) { this.setState({ display: true }) }\n  }\n\n  render() {\n    //console.log('---------------------', this.props.results)\n    return (\n      <div id=\"form\">\n        <form onSubmit={this.handleSubmitUrl}>\n          <input name=\"url\" placeholder=\"Please Enter a URL\" type=\"text\" />\n          <button type=\"submit\"><span data-testId=\"submit-count\"></span>Go!</button>\n          {/* //<p><span data-testId=\"count-number\">{\"Count:\" + this.props.count}</span></p> */}\n          <div onClick={this.handleClickGo}>\n            <button name=\"get\">GET</button>\n            <button name=\"put\">PUT</button>\n            <button name=\"post\">POST</button>\n            <button name=\"delete\">DELETE</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\nexport default Form;\n\n\n\n\n\n  // old code lab 26\n   //{!this.state.display ? \"\" :}\n  // handleUrl = e => {\n  //   let newPath = e.target.value;\n  //   //console.log(e.target.value);\n  //   this.setState({ url: newPath });\n  // }\n\n  // handleClickGo = e => {\n  //   e.preventDefault();\n  //   let newPath = this.state.url;\n  //   console.log('URL_____', this.state.url);\n  //   let newUrlWithPath = this.state.route;\n  //   console.log('ROUTE_____', this.state.route);\n  //   this.setState({ url: newPath });\n  //   this.setState({ route: newUrlWithPath });\n  //   //let url = this.state.url;\n  //   //let route = this.state.route;\n  //   //return `${newPath} ${newUrlWithPath}`\n  // }\n\n  // handleGet = e => {\n  //   e.preventDefault();\n  //   let getPath = e.target.id;\n  //   this.setState({ route: getPath });\n\n  // }\n  // handlePost = e => {\n  //   e.preventDefault();\n  //   let postPath = e.target.id;\n  //   this.setState({ route: postPath });\n  // }\n  // handlePut = e => {\n  //   e.preventDefault();\n  //   let putPath = e.target.id;\n  //   this.setState({ route: putPath });\n  // }\n  // handleDelete = e => {\n  //   e.preventDefault();\n  //   let deletePath = e.target.id;\n  //   this.setState({ route: deletePath });\n  // }\n\n\n\n// old code lab 26\n/* <>\n          /* URL:<input onChange={this.handleUrl} />\n          <button onClick={this.handleClickGo}>GO!</button>\n          <div>\n            <button id=\"get\" onClick={this.handleGet}>GET</button>\n            <button id=\"post\" onClick={this.handlePost}>POST</button>\n            <button id=\"put\" onClick={this.handlePut}>PUT</button>\n            <button id=\"delete\" onClick={this.handleDelete}>DELETE</button>\n          </div>\n          <div class=\"enter\">\n\n            <h3>{this.state.route} {this.state.url}</h3>\n\n\n\n          </div>\n\n\n        </>\n    )\n         {/* <div>\n          <h3>URL: {this.state.url}</h3>\n          <h3>Route: {this.state.route}</h3>\n        </div> */\n\n\n","import React from 'react';\nimport ReactJson from 'react-json-view';\n\nclass Results extends React.Component {\n\n  render() {\n    console.log('RESULTS', this.props.count);\n    return (\n      <div id=\"render\">\n        <ReactJson src={this.props.results} />\n        <p><span data-testId=\"count-number\">{\"Count:\" + this.props.count}</span></p>\n\n\n        {/* <p id=\"count-number\"> {this.props.count}</p> */}\n\n      </div >\n    )\n  }\n}\n\nexport default Results;\n/* <Results />\nExpects the count, headers, results to be sent in as props\nRenders the count\nRenders the Result Headers as “pretty” JSON\nRenders the Result Body as “pretty” JSON */","import React from 'react';\nimport './footer.scss';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer>Made by @StacyJane</footer>\n    )\n  }\n}\n\nexport default Footer;","import React from 'react';\nimport Header from './header/header';\nimport Form from './form/form';\nimport Results from './results/results';\nimport Footer from './footer/footer';\nimport './app.scss';  //base design for site\n\n// Lab requirements\n// app.js - Container\n// Holds state: Count and Results Array\n// A class method that can update state\n// Renders 2 Child Components\n\n// form and results\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: '',\n      results: [],\n      headers: ''\n    };\n  }\n\n  updateResults = (apiResults) => {\n    this.setState({ headers: apiResults.headers });\n    this.setState({ results: apiResults.results });\n    this.setState({ count: apiResults.count });\n  }\n\n  render() {\n    return (\n      <>\n        <Header\n          {...this.state.headers}\n        />\n        <Form\n          apiResults={this.updateResults}\n        />\n        <Results\n          count={this.state.count}\n          results={this.state.results}\n        />\n        <Footer />\n      </>\n    )\n  }\n}\n\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}